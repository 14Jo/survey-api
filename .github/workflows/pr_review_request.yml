name: PR Review Notification

on:
  pull_request:
    types: [ready_for_review, synchronize]

jobs:
  notify:
    if: |
      github.event.action == 'ready_for_review' || 
      (github.event.action == 'synchronize' && github.event.pull_request.draft == false)
    runs-on: ubuntu-latest

    steps:
      - name: Set Notification Message
        env:
          ACTION: ${{ github.event.action }}
        run: |
          if [ "$ACTION" = "ready_for_review" ]; then
            echo "NOTIFY_MSG=‚úÖ PR Î¶¨Î∑∞ ÏöîÏ≤≠" >> $GITHUB_ENV
          elif [ "$ACTION" = "synchronize" ]; then
            echo "NOTIFY_MSG=‚úèÔ∏è PR ÏàòÏ†ïÎÇ¥Ïö© Î∞òÏòÅ" >> $GITHUB_ENV
          fi

      - name: Set up PR context from last commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
          COMMIT_INFO=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/commits/$LATEST_COMMIT_SHA")
          PR_AUTHOR=$(echo "$COMMIT_INFO" | jq -r '.author.login // .committer.login')
          
          echo "PR_AUTHOR=${PR_AUTHOR}" >> $GITHUB_ENV
          echo "PR_TITLE=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "PR_URL=$(jq -r .pull_request.html_url "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Select reviewers based on rules
        id: slack-reviewers
        env:
          SLACK_USER_JIN: ${{ secrets.SLACK_USER_JIN }}
          SLACK_USER_JUN: ${{ secrets.SLACK_USER_JUN }}
          SLACK_USER_TAE: ${{ secrets.SLACK_USER_TAE }}
          SLACK_USER_DOY: ${{ secrets.SLACK_USER_DOY }}
          SLACK_USER_GU: ${{ secrets.SLACK_USER_GU }}
          SLACK_USER_DONG: ${{ secrets.SLACK_USER_DONG }}
        run: |
          set -e

          declare -A GH_TO_SLACK
          GH_TO_SLACK["Jindnjs"]="$SLACK_USER_JIN"
          GH_TO_SLACK["LJY981008"]="$SLACK_USER_JUN"
          GH_TO_SLACK["taeung515"]="$SLACK_USER_TAE"
          GH_TO_SLACK["easter1201"]="$SLACK_USER_DOY"
          GH_TO_SLACK["kcc5107"]="$SLACK_USER_GU"
          GH_TO_SLACK["DG0702"]="$SLACK_USER_DONG"

          # 1. PR ÏûëÏÑ±ÏûêÏóê Îî∞Îùº ÏßÄÏ†ï Î¶¨Î∑∞Ïñ¥ÏôÄ Ï†úÏô∏ Î™©Î°ù ÏÑ§Ï†ï
          MANDATORY_REVIEWER_GH=""
          EXCLUSIONS=("$PR_AUTHOR")

          case "${PR_AUTHOR}" in
            "Jindnjs")
              MANDATORY_REVIEWER_GH="LJY981008"
              ;;
            "LJY981008")
              MANDATORY_REVIEWER_GH="Jindnjs"
              ;;
            "taeung515" | "easter1201")
              MANDATORY_REVIEWER_GH="LJY981008"
              EXCLUSIONS+=("Jindnjs")
              ;;
            "kcc5107" | "DG0702")
              MANDATORY_REVIEWER_GH="Jindnjs"
              EXCLUSIONS+=("LJY981008")
              ;;
          esac

          if [ -n "$MANDATORY_REVIEWER_GH" ]; then
            EXCLUSIONS+=("$MANDATORY_REVIEWER_GH")
          fi

          # 2. ÎûúÎç§ Î¶¨Î∑∞Ïñ¥ ÌõÑÎ≥¥ Î™©Î°ù ÏÉùÏÑ±
          ALL_GH_USERS=("${!GH_TO_SLACK[@]}")
          RANDOM_CANDIDATES=()
          for user in "${ALL_GH_USERS[@]}"; do
            is_excluded=false
            for excluded_user in "${EXCLUSIONS[@]}"; do
              if [[ "${user,,}" == "${excluded_user,,}" ]]; then
                is_excluded=true
                break
              fi
            done
            if ! $is_excluded; then
              RANDOM_CANDIDATES+=("$user")
            fi
          done

          # 3. ÏµúÏ¢Ö Î¶¨Î∑∞Ïñ¥ Î™©Î°ù Ï°∞Ìï© (ÏßÄÏ†ï + ÎûúÎç§)
          FINAL_REVIEWERS=()
          if [ -n "$MANDATORY_REVIEWER_GH" ]; then
            slack_id="${GH_TO_SLACK[$MANDATORY_REVIEWER_GH]}"
            FINAL_REVIEWERS+=("<@${slack_id}>")
          fi

          if (( ${#RANDOM_CANDIDATES[@]} >= 2 )); then
            SHUFFLED=($(printf "%s\n" "${RANDOM_CANDIDATES[@]}" | shuf -n 2))
            for user in "${SHUFFLED[@]}"; do
              slack_id="${GH_TO_SLACK[$user]}"
              FINAL_REVIEWERS+=("<@${slack_id}>")
            done
            REVIEWERS_TEXT=$(IFS=' '; echo "${FINAL_REVIEWERS[*]}")
          else
            if (( ${#FINAL_REVIEWERS[@]} > 0 )); then
              REVIEWERS_TEXT="$(IFS=' '; echo "${FINAL_REVIEWERS[*]}") (ÎûúÎç§ Î¶¨Î∑∞Ïñ¥ Î∂ÄÏ°±)"
            else
              REVIEWERS_TEXT="Î¶¨Î∑∞Ïñ¥ ÌõÑÎ≥¥Í∞Ä Î∂ÄÏ°±ÌïòÏó¨ Î¶¨Î∑∞Ïñ¥Î•º ÏÑ†Ï†ïÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§."
            fi
          fi

          # 4. Í≤∞Í≥ºÎ¨ºÏùÑ ÌôòÍ≤Ω Î≥ÄÏàòÎ°ú ÎÇ¥Î≥¥ÎÇ¥Í∏∞
          echo "SLACK_REVIEWERS=${REVIEWERS_TEXT}" >> $GITHUB_ENV


      - name: Send Slack message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          msg="üì£ *PR ÏïåÎ¶º!*\n$NOTIFY_MSG\n*Ï†úÎ™©:* $PR_TITLE\n*ÏûëÏÑ±Ïûê:* $PR_AUTHOR\n*ÎßÅÌÅ¨:* $PR_URL\n*Î¶¨Î∑∞Ïñ¥:* $SLACK_REVIEWERS üôè"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"$msg\"
          }" $SLACK_WEBHOOK_URL
