name: PR Review Notification

on:
  pull_request:
    types: [ready_for_review, synchronize]

jobs:
  notify:
    if: |
      github.event.action == 'ready_for_review' || 
      (github.event.action == 'synchronize' && github.event.pull_request.draft == false)
    runs-on: ubuntu-latest

    steps:
      - name: Set Notification Message
        env:
          ACTION: ${{ github.event.action }}
        run: |
          if [ "$ACTION" = "ready_for_review" ]; then
            echo "NOTIFY_MSG=‚úÖ PR Î¶¨Î∑∞ ÏöîÏ≤≠" >> $GITHUB_ENV
          elif [ "$ACTION" = "synchronize" ]; then
            echo "NOTIFY_MSG=‚úèÔ∏è PR ÏàòÏ†ïÎÇ¥Ïö© Î∞òÏòÅ" >> $GITHUB_ENV
          fi

      - name: Set up PR context
        id: context
        run: |
          echo "PR_AUTHOR=$(jq -r .pull_request.user.login "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "PR_TITLE=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "PR_URL=$(jq -r .pull_request.html_url "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Select 2 random Slack IDs (excluding PR author)
        id: slack-reviewers
        run: |
          # Declare mapping of GitHub usernames to Slack IDs
          declare -A GH_TO_SLACK
          GH_TO_SLACK["Jindnjs"]="${{ secrets.SLACK_USER_JIN }}"
          GH_TO_SLACK["LJY981008"]="${{ secrets.SLACK_USER_JUN }}"
          GH_TO_SLACK["taeung515"]="${{ secrets.SLACK_USER_TAE }}"
          GH_TO_SLACK["easter1201"]="${{ secrets.SLACK_USER_DOY }}"
          GH_TO_SLACK["kcc5107"]="${{ secrets.SLACK_USER_GU }}"
          GH_TO_SLACK["DG0702"]="${{ secrets.SLACK_USER_DONG }}"

          # Build list excluding PR author
          REVIEWERS=()
          for user in "${!GH_TO_SLACK[@]}"; do
            if [[ "$user" != "$PR_AUTHOR" ]]; then
              REVIEWERS+=("$user")
            fi
          done

          # Check if at least 2 remain
          if (( ${#REVIEWERS[@]} < 2 )); then
            echo "SLACK_REVIEWERS=Î¶¨Î∑∞Ïñ¥Í∞Ä Î∂ÄÏ°±ÌïòÏó¨ ÎûúÎç§ Î¶¨Î∑∞Ïñ¥Î•º ÏÑ†Ï†ïÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§." >> $GITHUB_ENV
          else
            # Shuffle and pick 2
            SHUFFLED=($(printf "%s\n" "${REVIEWERS[@]}" | shuf -n 2))
            SLACK1="${GH_TO_SLACK[${SHUFFLED[0]}]}"
            SLACK2="${GH_TO_SLACK[${SHUFFLED[1]}]}"
            echo "SLACK_REVIEWERS=<@${SLACK1}> <@${SLACK2}>" >> $GITHUB_ENV
          fi

      - name: Send Slack message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          msg="üì£ *PR ÏïåÎ¶º!*\n$NOTIFY_MSG\n*Ï†úÎ™©:* $PR_TITLE\n*ÏûëÏÑ±Ïûê:* $PR_AUTHOR\n*ÎßÅÌÅ¨:* $PR_URL\n*Î¶¨Î∑∞Ïñ¥:* $SLACK_REVIEWERS üôè"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"$msg\"
          }" $SLACK_WEBHOOK_URL
