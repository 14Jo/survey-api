# 공통 설정
spring:
  # 기본 프로필을 dev로 설정
  profiles:
    active: dev
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 50        # 배치 크기
          batch_versioned_data: true
          order_inserts: true     # INSERT 순서 최적화
          order_updates: true     # UPDATE 순서 최적화
        batch_fetch_style: DYNAMIC
        default_batch_fetch_size: 50

  cache:
    cache-names:
      - projectMemberCache
      - projectStateCache
    caffeine:
      spec: >
        initialCapacity=100,
        maximumSize=500,
        expireAfterWrite=5m,
        expireAfterAccess=2m,
        recordStats

  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin

  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:survey_read_db}
      username: ${MONGODB_USERNAME:survey_user}
      password: ${MONGODB_PASSWORD:survey_password}
      authentication-database: ${MONGODB_AUTHDB:admin}

# =======================================================
# == Actuator 공통 설정 추가
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99

---
# 개발(dev) 프로필 - 로컬 PostgreSQL DB 설정
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/survey_db
    username: survey_user
    password: survey_password
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      connection-timeout: 5000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: localhost
      port: 6379
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_ADDRESS}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
firebase:
  credentials:
    path: classpath:firebase-survey-account.json

server:
  tomcat:
    threads:
      max: 20 # 최대 스레드 수를 25개
      min-spare: 10 # 최소 유휴 스레드

# 로그 설정 - 외부 API 관련 로그만 DEBUG로 설정
logging:
  level:
    org.springframework.security: DEBUG
    com.zaxxer.hikari: DEBUG
    org.apache.tomcat.util.threads.ThreadPoolExecutor: DEBUG
    com.example.surveyapi: INFO
    # 외부 API 관련 로그만 DEBUG로 설정
    com.example.surveyapi.domain.survey.application.SurveyQueryService: DEBUG
    com.example.surveyapi.domain.survey.infra.adapter.ParticipationAdapter: DEBUG
    com.example.surveyapi.domain.survey.api.SurveyQueryController: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/external_api_debug.log
    max-size: 10MB
    max-history: 30

# JWT Secret Key
jwt:
  secret:
    key: ${SECRET_KEY}

oauth:
  kakao:
    client-id: ${KAKAO_CLIENT_ID}
    redirect-uri: ${KAKAO_REDIRECT_URL}
  naver:
    client-id: ${NAVER_CLIENT_ID}
    client-secret: ${NAVER_SECRET}
    redirect-uri: ${NAVER_REDIRECT_URL}
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URL}


---
# 운영(prod) 프로필 - PostgreSQL (EC2 등 외부 서버) 설정
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_SCHEME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      connection-timeout: 5000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_ADDRESS}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

server:
  tomcat:
    threads:
      max: 20
      min-spare: 10

firebase:
  credentials:
    path: classpath:firebase-survey-account.json

# 로그 설정
logging:
  level:
    org.springframework.security: INFO
    com.example.surveyapi: INFO
    # 외부 API 관련 로그만 DEBUG로 설정
    com.example.surveyapi.domain.survey.application.SurveyQueryService: DEBUG
    com.example.surveyapi.domain.survey.infra.adapter.ParticipationAdapter: DEBUG
    com.example.surveyapi.domain.survey.api.SurveyQueryController: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/external_api_debug.log
    max-size: 100MB
    max-history: 30

# JWT Secret Key
jwt:
  secret:
    key: ${SECRET_KEY}

oauth:
  kakao:
    client-id: ${CLIENT_ID}
    redirect-uri: ${REDIRECT_URL}