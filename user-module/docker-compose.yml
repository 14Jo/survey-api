version: '3.8'

services:
  user-service:
    build:
      context: ..
      dockerfile: user-module/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SERVER_PORT=8081
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_SCHEME:-survey_db}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-admin}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-admin}
      - SECRET_KEY=${SECRET_KEY}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_REDIRECT_URL=${KAKAO_REDIRECT_URL}
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_SECRET=${NAVER_SECRET}
      - NAVER_REDIRECT_URL=${NAVER_REDIRECT_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - user-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_SCHEME:-survey_db}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_SCHEME:-survey_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user-network

  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      sh -c "
        rabbitmq-plugins enable rabbitmq_delayed_message_exchange &&
        docker-entrypoint.sh rabbitmq-server
      "
    networks:
      - user-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  user-network:
    driver: bridge
